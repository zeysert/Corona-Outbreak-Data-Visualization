package newpackage1;


import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import static java.util.Collections.list;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;
 
import java.awt.color.CMMException;
import java.awt.color.ColorSpace;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author zeys1
 */
public class NewJFrame extends javax.swing.JFrame {

    
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtfield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        list1 = new java.awt.List();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 153));
        jLabel1.setText("COVÄ°D-19 STATS");
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 16));

        jLabel2.setText("URL");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("ENTER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(255, 204, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Country", "dateRep", "day", "month", "year", "cases", "deaths", "geoId", "popData2018", "contientExp"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("barchart");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel3.setText("Country");

        jButton3.setText("barchart");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.setText("barchart");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setText("linechart");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton4.setText("barchart");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton7.setText("barchart");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setText("linechart");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("linechart");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("linechart");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel4.setText("total deaths-country");

        jLabel5.setText("total death-continent");

        jLabel6.setText("total cases-country");

        jLabel7.setText("total cases-continent");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel3)))
                .addGap(423, 423, 423)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                .addGap(215, 215, 215))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton11)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3)
                        .addComponent(jButton8)
                        .addComponent(jLabel4))
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton9)
                            .addComponent(jButton6)
                            .addComponent(jLabel5))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton10)
                            .addComponent(jButton4)
                            .addComponent(jLabel6))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton7)
                                    .addComponent(jButton11)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jLabel7)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jLabel8.setText("death");

        jLabel9.setText("cases");

        jButton12.setText("linechart");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("linechart");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton15.setText("barchart");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtfield)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)
                                .addGap(6, 6, 6))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(174, 174, 174)
                                        .addComponent(jButton13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton15))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(107, 107, 107)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton2))
                                            .addComponent(jLabel9))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(401, 401, 401)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jLabel8)
                    .addComponent(jButton12))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jButton13)
                    .addComponent(jButton15))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public class Ulke
{
public String dateRep;
public String day;
public String month;
public String year;
public String cases;
public String deaths;
public String countriesAndTerritories;
public String geoId;
public String countryterritoryCode;
public String popData2018;
public String continentExp;
    } 
     public static String url;

     
           ArrayList<Ulke> lstUlke_=new  ArrayList<Ulke>() {};
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       
            
   
        
        
        if(txtfield.getText() != null)
        {
              
                            

                             url = txtfield.getText().toString();
            DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();

		try 
		{
			DocumentBuilder builder = factory.newDocumentBuilder();
			Document doc=builder.parse(url);
			NodeList employeeList=doc.getElementsByTagName("record");
			for(int i=0;i<employeeList.getLength();i++)
			{
				Node r=employeeList.item(i);
				if(r.getNodeType()==Node.ELEMENT_NODE)
				{
					Element employee=(Element) r;
					String id=employee.getAttribute("id");
					NodeList nameList=employee.getChildNodes();
                                       Ulke Ulke_ = new Ulke();
					for(int j=0;j<nameList.getLength();j++)
					{
						Node n =nameList.item(j);
						if(n.getNodeType()==Node.ELEMENT_NODE)
						{
							Element name=(Element) n;
							//System.out.println("record" + id + " :"+name.getTagName()+"=" + name.getTextContent());
                                                         if (name.getTagName()=="dateRep") {
                                                             Ulke_.dateRep=name.getTextContent();                                                        
                                                         }
                                                         if (name.getTagName()=="day") {
                                                             Ulke_.day=name.getTextContent();                                                        
                                                         }
                                                         if (name.getTagName()=="month") {
                                                             Ulke_.month=name.getTextContent();                                                        
                                                         }
                                                         if (name.getTagName()=="year") {
                                                             Ulke_.year=name.getTextContent();                                                        
                                                         }
                                                         if (name.getTagName()=="cases") {
                                                             Ulke_.cases=name.getTextContent();                                                        
                                                         }
                                                         if (name.getTagName()=="deaths") {
                                                             Ulke_.deaths=name.getTextContent();                                                        
                                                         }
                                                         if (name.getTagName()=="countriesAndTerritories") {
                                                             Ulke_.countriesAndTerritories=name.getTextContent();                                                        
                                                         }
                                                         if (name.getTagName()=="geoId") {
                                                             Ulke_.geoId=name.getTextContent();                                                        
                                                         }
                                                         if (name.getTagName()=="countryterritoryCode") {
                                                             Ulke_.countryterritoryCode=name.getTextContent();                                                        
                                                         }
                                                         if (name.getTagName()=="popData2018") {
                                                             Ulke_.popData2018=name.getTextContent();                                                        
                                                         }
                                                         if (name.getTagName()=="continentExp") {
                                                             Ulke_.continentExp=name.getTextContent();                                                        
                                                         }
						}
					}
						lstUlke_.add(Ulke_);
				}
			}
                ArrayList<Ulke> lstUlke_Toplam=new  ArrayList<Ulke>() {};
                for(Ulke ulk : lstUlke_){
                    //System.out.println(i.Code+" "+ i.OlumOrani);                
                    Ulke result = null;
                    for (Ulke temp : lstUlke_Toplam) {
                         if (ulk.countriesAndTerritories.equals(temp.countriesAndTerritories)) {
                             result = temp;
                             result.deaths=String.valueOf(Integer.parseInt(result.deaths)+Integer.parseInt(ulk.deaths));
                            }
                        }
                    
                    if(result==null)
                    {
                        Ulke EklenecekUlke_ = new Ulke();
                        EklenecekUlke_.countriesAndTerritories=ulk.countriesAndTerritories;
                        EklenecekUlke_.countryterritoryCode=ulk.countryterritoryCode;
                        EklenecekUlke_.dateRep=ulk.dateRep;
                        EklenecekUlke_.day=ulk.day;
                        EklenecekUlke_.month=ulk.month;
                        EklenecekUlke_.year=ulk.year;
                        EklenecekUlke_.cases=ulk.cases;
                        EklenecekUlke_.deaths=ulk.deaths;
                        EklenecekUlke_.geoId=ulk.geoId;                        
                        EklenecekUlke_.popData2018=ulk.popData2018;
                        EklenecekUlke_.continentExp=ulk.continentExp;                        
                        
                        lstUlke_Toplam.add(EklenecekUlke_);
                        
                    }
        
                }
                  
                        
               // jTable1.addColumn("countriesAndTerritories");
              //  jTable1.addColumn("dateRep");
              //  jTable1.addColumn("day");
               // jTable1.addColumn("month");
              ///  jTable1.addColumn("year");
              //  jTable1.addColumn("cases");
              //  jTable1.addColumn("deaths");
              //  jTable1.addColumn("geoId");
              //  jTable1.addColumn("popData2018");
               // jTable1.addColumn("continentExp");
                
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Object rowData[] = new Object[10];
        
  
       
                 for(Ulke ulk : lstUlke_Toplam){
                     
                
                
                rowData[0] = ulk.countriesAndTerritories;
                rowData[1] = ulk.dateRep;
                rowData[2] = ulk.day;
                rowData[3] = ulk.month;
                rowData[4] = ulk.year;
                rowData[5] = ulk.cases;
                rowData[6] = ulk.deaths;
                rowData[7] = ulk.geoId;
                rowData[8] = ulk.popData2018;
                rowData[9] = ulk.continentExp;
                
                model.addRow(rowData);
                    
                list1.add(ulk.countryterritoryCode);
       
                      
                }
                 
        
                                               
			
		} catch (ParserConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SAXException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
        }
    
    }//GEN-LAST:event_jButton1ActionPerformed

    
   
        
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        

        String SecilenKayit=list1.getSelectedItem();;
        DefaultCategoryDataset dod=new DefaultCategoryDataset();
                for(Ulke ulk : lstUlke_){
                    //System.out.println(i.Code+" "+ i.OlumOrani);                
                    Ulke result = null;
                    int OlumSayisi=0;
                         if (ulk.countryterritoryCode.equals(SecilenKayit)) {
                             OlumSayisi=OlumSayisi+Integer.parseInt(ulk.deaths);
                               
                             
                             dod.setValue(OlumSayisi,"TUR",ulk.dateRep);

        
                            }     
                }
        JFreeChart jchart=ChartFactory.createBarChart("deaths-date report", "date", "deaths", dod,PlotOrientation.VERTICAL,true,true,false);
        
        CategoryPlot plot=jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.black);
        

        ChartFrame chartFrm=new ChartFrame("ulk",jchart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(5000,4000);
        
        
       
     
      
        
        
    }//GEN-LAST:event_jButton2ActionPerformed
                    int OlumSayisi=0;

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        
        
        
        
          DefaultCategoryDataset dod=new DefaultCategoryDataset();
                for(Ulke ulk : lstUlke_){
                    //System.out.println(i.Code+" "+ i.OlumOrani);                
                         
                         
                             OlumSayisi=OlumSayisi+Integer.parseInt(ulk.deaths);
                               
                             
                             dod.setValue(OlumSayisi,"COUNTRY",ulk.countriesAndTerritories);

        
                              
                }
        JFreeChart jchart=ChartFactory.createBarChart("total death-country report", "countries", "deaths", dod,PlotOrientation.VERTICAL,true,true,true);
        
        CategoryPlot plot=jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.PINK);
        

        ChartFrame chartFrm=new ChartFrame("ulk",jchart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(5000,4000);
        
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    int VakaSayisi=0;
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        
        
        
          DefaultCategoryDataset dod=new DefaultCategoryDataset();
                for(Ulke ulk : lstUlke_){
                    //System.out.println(i.Code+" "+ i.OlumOrani);                
                         
                         
                             VakaSayisi=VakaSayisi+Integer.parseInt(ulk.cases);
                               
                             
                             dod.setValue(VakaSayisi,"COUNTRY",ulk.countriesAndTerritories);

        
                              
                }
        JFreeChart jchart=ChartFactory.createBarChart("total cases-country report", "countries", "cases", dod,PlotOrientation.VERTICAL,true,true,true);
        
        CategoryPlot plot=jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.YELLOW);
        

        ChartFrame chartFrm=new ChartFrame("ulk",jchart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(5000,4000);
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        
        
        
          DefaultCategoryDataset dod=new DefaultCategoryDataset();
                for(Ulke ulk : lstUlke_){
                    //System.out.println(i.Code+" "+ i.OlumOrani);                
                         
                         
                             OlumSayisi=OlumSayisi+Integer.parseInt(ulk.deaths);
                               
                             
                             dod.setValue(OlumSayisi,"COUNTRY",ulk.geoId);

        
                              
                }
        JFreeChart jchart=ChartFactory.createBarChart("total death-geo report", "geo", "deaths", dod,PlotOrientation.VERTICAL,true,true,true);
        
        CategoryPlot plot=jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.PINK);
        

        ChartFrame chartFrm=new ChartFrame("ulk",jchart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(5000,4000);
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
        
        
        
        
          DefaultCategoryDataset dod=new DefaultCategoryDataset();
                for(Ulke ulk : lstUlke_){
                    //System.out.println(i.Code+" "+ i.OlumOrani);                
                         
                         
                             VakaSayisi=VakaSayisi+Integer.parseInt(ulk.cases);
                               
                             
                             dod.setValue(VakaSayisi,"COUNTRY",ulk.geoId);

        
                              
                }
        JFreeChart jchart=ChartFactory.createBarChart("total cases-geo report", "geo", "cases", dod,PlotOrientation.VERTICAL,true,true,true);
        
        CategoryPlot plot=jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.YELLOW);
        

        ChartFrame chartFrm=new ChartFrame("ulk",jchart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(5000,4000);
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

          DefaultCategoryDataset dod=new DefaultCategoryDataset();
                for(Ulke ulk : lstUlke_){
                    //System.out.println(i.Code+" "+ i.OlumOrani);                
                         
                         
                             OlumSayisi=OlumSayisi+Integer.parseInt(ulk.deaths);
                               
                             
                             dod.setValue(OlumSayisi,"COUNTRY",ulk.countriesAndTerritories);

        
                              
                }
        JFreeChart jchart=ChartFactory.createLineChart("total death-country report", "countries", "deaths", dod,PlotOrientation.VERTICAL,true,true,true);
        
        CategoryPlot plot=jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.PINK);
        

        ChartFrame chartFrm=new ChartFrame("ulk",jchart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(5000,4000);
        
        







// TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        
        
          DefaultCategoryDataset dod=new DefaultCategoryDataset();
                for(Ulke ulk : lstUlke_){
                    //System.out.println(i.Code+" "+ i.OlumOrani);                
                         
                         
                             OlumSayisi=OlumSayisi+Integer.parseInt(ulk.deaths);
                               
                             
                             dod.setValue(OlumSayisi,"COUNTRY",ulk.geoId);

        
                              
                }
        JFreeChart jchart=ChartFactory.createLineChart("total death-geo report", "geo", "deaths", dod,PlotOrientation.VERTICAL,true,true,true);
        
        CategoryPlot plot=jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.PINK);
        

        ChartFrame chartFrm=new ChartFrame("ulk",jchart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(5000,4000);
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        
        
        
        
          DefaultCategoryDataset dod=new DefaultCategoryDataset();
                for(Ulke ulk : lstUlke_){
                    //System.out.println(i.Code+" "+ i.OlumOrani);                
                         
                         
                             VakaSayisi=VakaSayisi+Integer.parseInt(ulk.cases);
                               
                             
                             dod.setValue(VakaSayisi,"COUNTRY",ulk.countriesAndTerritories);

        
                              
                }
        JFreeChart jchart=ChartFactory.createBarChart("total cases-country report", "countries", "cases", dod,PlotOrientation.VERTICAL,true,true,true);
        
        CategoryPlot plot=jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.YELLOW);
        

        ChartFrame chartFrm=new ChartFrame("ulk",jchart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(5000,4000);
        
        
        
        
        
        
        
        
        
        
    }                                        

    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        
     
        
        
        
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        
        
          DefaultCategoryDataset dod=new DefaultCategoryDataset();
                for(Ulke ulk : lstUlke_){
                    //System.out.println(i.Code+" "+ i.OlumOrani);                
                         
                         
                             VakaSayisi=VakaSayisi+Integer.parseInt(ulk.cases);
                               
                             
                             dod.setValue(VakaSayisi,"COUNTRY",ulk.geoId);

        
                              
                }
        JFreeChart jchart=ChartFactory.createBarChart("total cases-geo report", "geo", "cases", dod,PlotOrientation.VERTICAL,true,true,true);
        
        CategoryPlot plot=jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.YELLOW);
        

        ChartFrame chartFrm=new ChartFrame("ulk",jchart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(5000,4000);
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        
        
        
        String SecilenKayit=list1.getSelectedItem();;
        DefaultCategoryDataset dod=new DefaultCategoryDataset();
                for(Ulke ulk : lstUlke_){
                    //System.out.println(i.Code+" "+ i.OlumOrani);                
                    Ulke result = null;
                    int OlumSayisi=0;
                         if (ulk.countryterritoryCode.equals(SecilenKayit)) {
                             OlumSayisi=OlumSayisi+Integer.parseInt(ulk.deaths);
                               
                             
                             dod.setValue(OlumSayisi,"TUR",ulk.dateRep);

        
                            }     
                }
        JFreeChart jchart=ChartFactory.createLineChart("deaths-date report", "date", "deaths", dod,PlotOrientation.VERTICAL,true,true,false);
        
        CategoryPlot plot=jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.black);
        

        ChartFrame chartFrm=new ChartFrame("ulk",jchart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(5000,4000);
        
        
        
        
        
        
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        
        
        String SecilenKayit1=list1.getSelectedItem();;
        DefaultCategoryDataset dod=new DefaultCategoryDataset();
                for(Ulke ulk : lstUlke_){
                    //System.out.println(i.Code+" "+ i.OlumOrani);                
                    Ulke result = null;
                    int vakasayisi=0;
                         if (ulk.countryterritoryCode.equals(SecilenKayit1)) {
                             vakasayisi=vakasayisi+Integer.parseInt(ulk.cases);
                               
                             
                             dod.setValue(vakasayisi,"TUR",ulk.dateRep);

        
                            }     
                }
        JFreeChart jchart=ChartFactory.createLineChart("cases-date report", "date", "cases", dod,PlotOrientation.VERTICAL,true,true,false);
        
        CategoryPlot plot=jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.black);
        

        ChartFrame chartFrm=new ChartFrame("ulk",jchart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(5000,4000);
        
        
        
        
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        
        
          String SecilenKayit1=list1.getSelectedItem();;
        DefaultCategoryDataset dod=new DefaultCategoryDataset();
                for(Ulke ulk : lstUlke_){
                    //System.out.println(i.Code+" "+ i.OlumOrani);                
                    Ulke result = null;
                    int vakasayisi=0;
                         if (ulk.countryterritoryCode.equals(SecilenKayit1)) {
                             vakasayisi=vakasayisi+Integer.parseInt(ulk.cases);
                               
                             
                             dod.setValue(vakasayisi,"TUR",ulk.dateRep);

        
                            }     
                }
        JFreeChart jchart=ChartFactory.createBarChart("cases-date report", "date", "cases", dod,PlotOrientation.VERTICAL,true,true,false);
        
        CategoryPlot plot=jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.black);
        

        ChartFrame chartFrm=new ChartFrame("ulk",jchart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(5000,4000);
        
        
        
        
    }//GEN-LAST:event_jButton15ActionPerformed
private static Ulke getUlkeByName(ArrayList<Ulke> ulkes, String name) {

        Ulke result = null;
        for (Ulke temp : ulkes) {
            if (name.equals(temp.countriesAndTerritories)) {
                result = temp;
            }
        }
        return result;
    }
    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        
        
        
        
    
        

        
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.awt.List list1;
    private javax.swing.JTextField txtfield;
    // End of variables declaration//GEN-END:variables
}
